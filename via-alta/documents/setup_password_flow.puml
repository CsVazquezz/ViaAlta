@startuml Setup Password Flow
title Via Alta - Setup Password Flow

actor User
participant "SetupPassword\nComponent" as SetupPasswordComponent
participant "Router" as Router
participant "API Route\n/api/auth/setup-password" as SetupAPI
participant "LocalUser\nModel" as LocalUserModel
participant "M2M Auth\nService" as M2MAuth
participant "Via DiseÃ±o\nAPI" as ExternalAPI

User -> SetupPasswordComponent: Enter email and create password
activate SetupPasswordComponent

SetupPasswordComponent ->> SetupAPI: POST /api/auth/setup-password
note right of SetupAPI: async operation
activate SetupAPI

SetupAPI ->> M2MAuth: authenticatedRequest()
activate M2MAuth

M2MAuth ->> ExternalAPI: POST /m2m/authenticate
activate ExternalAPI
ExternalAPI -->> M2MAuth: token
deactivate ExternalAPI

M2MAuth ->> ExternalAPI: GET /v1/users/find_one?ivd_id={ivdId}
activate ExternalAPI
ExternalAPI -->> M2MAuth: userData
deactivate ExternalAPI

M2MAuth -->> SetupAPI: userData
deactivate M2MAuth

alt Email doesn't match
    SetupAPI -->> SetupPasswordComponent: 400 Bad Request
    SetupPasswordComponent --> User: Error: Email doesn't match records
else User already has a password
    SetupAPI ->> LocalUserModel: findByIvdId(ivdId)
    activate LocalUserModel
    LocalUserModel -->> SetupAPI: existingUser
    deactivate LocalUserModel
    
    SetupAPI -->> SetupPasswordComponent: 400 Bad Request
    SetupPasswordComponent --> User: Error: User already has a password
else Valid setup
    SetupAPI ->> LocalUserModel: create(userData)
    activate LocalUserModel
    note right of LocalUserModel: Hash password with bcrypt
    LocalUserModel -->> SetupAPI: success
    deactivate LocalUserModel
    
    SetupAPI -->> SetupPasswordComponent: 200 OK
    SetupPasswordComponent -> Router: push('/')
    Router --> User: Redirect to login page
end

deactivate SetupAPI
deactivate SetupPasswordComponent

@enduml